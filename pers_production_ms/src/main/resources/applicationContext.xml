<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
       ">

    <context:component-scan base-package="com.cskaoyan"/>

    <!-- 日期转换器配置 -->
    <mvc:annotation-driven conversion-service="myDateConversion"/>

    <!-- 一定不要忘记注册转换器 -->
    <bean name="myDateConversion" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.cskaoyan.util.convert.MyDateConverter"/>
            </set>
        </property>
    </bean>

    <!--
        配置静态资源处理

        配置<mvc:default-servlet-handler />后，会在Spring MVC上下文中定义一个
        org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，
        它会像安检人员，对进入DispatcherServlet的URL进行过滤，
        如果发现是静态资源的URL请求，就将该请求转由Web应用服务器默认的Servlet处理，
        如果不是静态资源的请求，才由DispatcherServlet继续处理

        必须结合<mvc:annotation-driven />使用，否则无法生效
    -->
    <!--<mvc:default-servlet-handler/>-->
    <!--另一种静态资源路径-->
    <mvc:resources mapping="css/**" location="/WEB-INF/css/"/>
    <mvc:resources mapping="js/**" location="/WEB-INF/js/"/>
    <mvc:resources mapping="image/**" location="/WEB-INF/image/"/>
    <mvc:resources mapping="pic/**" location="/pic/"/>
    <mvc:resources mapping="file/**" location="/file/"/>

    <!--ViewResolver配置-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
        <!--<property name="order" value="2"></property>-->
        <!-- 如果还有其他ViewResolver，则 * 不能省略，否则精确匹配-->
        <!--<property name="viewNames" value="jsp*"/>-->
    </bean>


    <!--拦截器配置-->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.cskaoyan.interceptor.AuthorizedInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!--文件上传，普通表单项和文件同时解析-->
    <bean name="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

    <!--Service配置-->
    <!--@Transactional(propagation = Propagation.REQUIRED, isolation = Isolation.REPEATABLE_READ)-->
    <!--开启Spring事务管理-->
    <tx:annotation-driven transaction-manager="myDsTransactionManager"/>

    <bean name="myDsTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="myDataSource"/>
    </bean>

    <!-- alibaba Druid的配置-->
    <bean id="myDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性 url、user、password -->
        <property name="url" value="jdbc:mysql://localhost:3306/production_ssm?characterEncoding=utf8&amp;/>"/>
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="20"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 'x'"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20"/>

        <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
        <property name="filters" value="stat"/>
    </bean>

    <!--MyBatis配置-->
    <bean name="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource"/>
        <!-- 自动生成全类名 -->
        <!--<property name="typeAliasesPackage" value="com.cskaoyan.domain" />-->
        <!--
            所有配置的Mapper文件
            等同于？
            <mappers>
                <package name="org.deepsl.hrm.dao"/>
            </mappers>
        -->
        <property name="mapperLocations" value="classpath:com/cskaoyan/dao/*.xml"/>

        <!-- 分页配置 -->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <!--使用下面的方式配置参数，一行配置一个 -->
                        <value>
                            dialect=mysql
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cskaoyan.dao"/>
        <!--不配置<property name="mapperLocations" value="classpath*:org/deepsl/hrm/dao/*.xml"/>,配置下面这个也行-->
        <!--注意是value,不是ref-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
    </bean>

    <mvc:annotation-driven>
        <!--<mvc:path-matching suffix-pattern="true" registered-suffixes-only="true"/>-->
        <mvc:path-matching suffix-pattern="true"/>
    </mvc:annotation-driven>

</beans>