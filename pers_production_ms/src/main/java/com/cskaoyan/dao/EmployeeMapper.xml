<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.cskaoyan.domain.Employee">
    <id column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="id_code" jdbcType="VARCHAR" property="idCode" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="join_date" jdbcType="DATE" property="joinDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="graduate_school" jdbcType="VARCHAR" property="graduateSchool" />
    <result column="education_form" jdbcType="VARCHAR" property="educationForm" />
    <result column="department_id" jdbcType="VARCHAR" property="departmentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    emp_id, emp_name, sex, id_code, birthday, join_date, status, education, degree, major, 
    graduate_school, education_form, department_id
  </sql>
  
  
  
  <select id="selectAll" parameterType="" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    
  </select>
  
  <select id="searchEmployeeByEmployeeName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where emp_name = #{empName,jdbcType=VARCHAR}
  </select>
  
  
  
  <select id="selectByExample" parameterType="com.cskaoyan.domain.EmployeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from employee
    where emp_id = #{empId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from employee
    where emp_id = #{empId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.cskaoyan.domain.Employee">
    insert into employee (emp_id, emp_name, sex, 
      id_code, birthday, join_date, 
      status, education, degree, 
      major, graduate_school, education_form, 
      department_id)
    values (#{empId,jdbcType=VARCHAR}, #{empName,jdbcType=VARCHAR}, #{sex,jdbcType=CHAR}, 
      #{idCode,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, #{joinDate,jdbcType=DATE}, 
      #{status,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{graduateSchool,jdbcType=VARCHAR}, #{educationForm,jdbcType=VARCHAR}, 
      #{departmentId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cskaoyan.domain.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idCode != null">
        id_code,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="joinDate != null">
        join_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="graduateSchool != null">
        graduate_school,
      </if>
      <if test="educationForm != null">
        education_form,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="idCode != null">
        #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="joinDate != null">
        #{joinDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null">
        #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="educationForm != null">
        #{educationForm,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.cskaoyan.domain.EmployeeExample" resultType="java.lang.Long">
    select count(*) from employee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <!-- 批量删除(进行修改，完成） -->
       <delete id="deleteBatch">
             DELETE
             FROM
                    employee
             WHERE
                    employee_id IN
             <foreach collection="array" item="id" open="(" close=")" separator=",">
                    #{id}
             </foreach>
       </delete>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.domain.Employee">
    update employee
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="idCode != null">
        id_code = #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="joinDate != null">
        join_date = #{joinDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null">
        graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="educationForm != null">
        education_form = #{educationForm,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.domain.Employee">
    update employee
    set emp_name = #{empName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      id_code = #{idCode,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      join_date = #{joinDate,jdbcType=DATE},
      status = #{status,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      education_form = #{educationForm,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=VARCHAR}
    where emp_id = #{empId,jdbcType=VARCHAR}
  </update>
</mapper>